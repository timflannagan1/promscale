apiVersion: apps/v1
kind: Deployment
metadata:
  name: coordinator
  labels:
    app: presto
    presto: coordinator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: presto
  template:
    metadata:
      labels:
        app: presto
        presto: coordinator
    spec:
      securityContext:
        runAsNonRoot: true
      serviceAccount: presto
      volumes:
      - name: config-properties
        configMap:
          name: config
      - name: catalog-properties
        configMap:
          name: catalog  
      - name: jmx-properties
        configMap:
          name: jmx
      - name: trusted-ca-bundle
        configMap:
          name: coordinator-trusted-ca-bundle
          items:
          - key: ca-bundle.crt
            path: service-ca.crt
      - name: presto-data
        emptyDir: {}
      - name: presto-logs
        emptyDir: {}
      - name: metastore
        emptyDir: {}
      - name: presto-etc
        emptyDir: {}
      initContainers:
      - name: setup-coordinator-properties
        image: quay.io/tflannag/presto:334
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          #! /bin/bash
          
          set -eou pipefail

          echo "Copying ConfigMap volume contents"
          cp -v -L -r -f /presto-etc/* /opt/presto/presto-server/etc/

          # add node id to node config
          NODE_CONFIG=/opt/presto/presto-server/etc/node.properties
          # ensure there's a newline between the last item in the config and what we add
          echo "" >> $NODE_CONFIG
          if ! grep -q -F 'node.id' "$NODE_CONFIG"; then
            NODE_ID="node.id=$MY_NODE_ID"
            echo "Adding $NODE_ID to $NODE_CONFIG"
            echo "$NODE_ID" >> "$NODE_CONFIG"
          fi
        env:
        - name: MY_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        volumeMounts:
        - name: presto-etc
          mountPath: /opt/presto/presto-server/etc
        - name: config-properties
          mountPath: /presto-etc
      containers:
      - name: coordinator
        image: quay.io/tflannag/presto:334
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          #! /bin/bash
          set -euo pipefail

          function importCert() {
            PEM_FILE=$1
            PASSWORD=$2
            KEYSTORE=$3
            # number of certs in the PEM file
            CERTS=$(grep 'END CERTIFICATE' $PEM_FILE| wc -l)

            # For every cert in the PEM file, extract it and import into the JKS keystore
            # awk command: step 1, if line is in the desired cert, print the line
            #              step 2, increment counter when last line of cert is found
            for N in $(seq 0 $(($CERTS - 1))); do
              ALIAS="${PEM_FILE%.*}-$N"
              cat $PEM_FILE |
                awk "n==$N { print }; /END CERTIFICATE/ { n++ }" |
                keytool -noprompt -import -trustcacerts \
                  -alias $ALIAS -keystore $KEYSTORE -storepass $PASSWORD
            done
          }

          # # always add the openshift service-ca.crt if it exists
          # if [ -a /etc/pki/ca-trust/extracted/pem/service-ca.crt ]; then
          #   echo "Adding /etc/pki/ca-trust/extracted/pem/service-ca.crt to $JAVA_HOME/lib/security/cacerts"
          #   importCert /etc/pki/ca-trust/extracted/pem/service-ca.crt changeit $JAVA_HOME/lib/security/cacerts
          # fi

          echo "Adding /var/run/secrets/kubernetes.io/serviceaccount/ca.crt to $JAVA_HOME/lib/security/cacerts"
          importCert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt changeit $JAVA_HOME/lib/security/cacerts

          /opt/presto/presto-server/bin/launcher run
        ports:
        - name: api
          containerPort: 8080
        - name: metrics
          containerPort: 8082
        volumeMounts:
        - name: trusted-ca-bundle
          mountPath: /etc/pki/ca-trust/extracted/pem
        - name: presto-etc
          mountPath: /opt/presto/presto-server/etc
        - name: catalog-properties
          mountPath: /opt/presto/presto-server/etc/catalog
        - name: presto-data
          mountPath: /var/presto/data
        - name: presto-logs
          mountPath: /var/presto/logs
        - name: jmx-properties
          mountPath: /opt/jmx_exporter/config
        - name: metastore
          mountPath: /var/hive/metastore
        resources:
          requests:
            cpu: 1
            memory: 1Gi
